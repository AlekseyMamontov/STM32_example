/*
 * DMA.h
 *
 *  Created on: Feb 10, 2025
 *      Author: oleksii
 */

#ifndef INC_DMA_H_
#define INC_DMA_H_
#include "stm32g4xx.h"

/*
 * DMA interrupt status register (DMA_ISR)
 * Address offset: 0x00
 * Reset value: 0x0000 0000
 [31] TEIF8: Transfer error (TE) flag for channel 8
 *		0: No TE event
 *		1: A TE event occurred.
 [30] HTIF8: Half transfer (HT) flag for channel 8
 *		0: No HT event
 *		1: An HT event occurred.
 [29] TCIF8: Transfer complete (TC) flag for channel 8
 *		0: No TC event
 *		1: A TC event occurred.
 [28] GIF8: Global interrupt flag for channel 8
 *		0: No TE, HT, or TC event
 *		1: A TE, HT, or TC event occurred.
 *
 ..........................

 [3] TEIF1: Флаг помилки передачі (TE) для каналу 1.
 [2] HTIF1: Флаг половинної передачі (HT) для каналу 1.
 [1] TCIF1: Флаг завершення передачі (TC) для каналу 1.
 [0] GIF1: Глобальний флаг переривання для каналу 1.

 *
 * DMA interrupt flag clear register (DMA_IFCR)
 * Address offset: 0x04
 * Reset value: 0x0000 0000
 *
 [31]CTEIF8 : Скидання флага помилки передачі – Цей біт використовується для скидання флага помилки передачі. Якщо сталася помилка *			*			 передачі даних, цей флаг буде встановлений. Скинувши цей біт, ви очищаєте стан помилки.
 [30]CHTIF8 : Скидання флага половинної передачі – Цей біт скидає флаг половинної передачі. Цей флаг встановлюється, коли половина *			*			 даних була передана. Скидання цього біта дозволяє системі зрозуміти, що ви обробили половину передачі.
 [29]CTCIF8 : Скидання флага завершення передачі – Цей біт використовується для скидання флага завершення передачі.
 *			 Коли передача завершена, цей флаг буде встановлений. Скидання цього біта необхідне для обробки завершення передачі.
 [28]CGIF8  : Скидання глобального флага переривання – Цей біт скидає глобальний флаг переривання для каналу 8.
 *			 Цей флаг встановлюється, коли відбулося будь-яке переривання, пов'язане з каналом.
 *			 Скидання глобального флага допомагає запобігти повторним обробкам переривань.
 *
 *
 *
 * DMA channel x configuration register (DMA_CCRx)
 *
 * Address offset: 0x08 + 0x14 * (x - 1), (x = 1 to 8)
 * Reset value: 0x0000 0000
 * Цi біти встановльються і скидаються програмно.
 * Вони не повині записуватись, коли канал увімкнено (EN = 1).
 * Доступний тільки для читання, коли канал увімкнено (EN = 1).
 *
 * Опис бітів регістра DMA
 [31:15] Зарезервовано, повинні зберігатися у значенні скидання.
 [14] MEM2MEM: Режим пам'ять-до-пам'яті
 *		0: Вимкнено
 *		1: Увімкнено
 *
 [13:12] PL[1:0]: Рівень пріоритету
 *		00: Низький
 *		01: Середній
 *		10: Високий
 *		11: Дуже високий

 [11:10] MSIZE[1:0]: Розмір пам'яті
 *	Визначає розмір даних кожного DMA-передачі до визначеної пам'яті.
 *	У режимі пам'ять-до-пам'яті цей бітфілд ідентифікує джерело пам'яті,
 *		DIR = 0, призначення в пам'ять
 *		DIR = 1, джерело із пам'яті,
 *	У режимі периферія-до-периферії цей бітфілд ідентифікує джерело периферії, якщо DIR = 1,
 *	    DIR = 0  призначення периферії
 *	    DIR = 1, джерело периферія
 *	    ..
 *		00: 8 біт
 *		01: 16 біт
 *		10: 32 біт
 *		11: Зарезервовано

 [9:8] PSIZE[1:0]: Розмір периферії
 *	Визначає розмір даних кожного DMA-передачі до визначеної периферії.
 *
 *	У режимі пам'ять-до-пам'яті
 *		DIR = 0  джерело пам'ять
 *		DIR = 1  призначення пам'яті
 *
 *	У режимі периферія-до-периферії
 *	  	DIR = 0 джерело периферії
 *	  	DIR = 1 призначення периферії,
 *	  	..
 *		00: 8 біт
 *		01: 16 біт
 *		10: 32 біт
 *		11: Зарезервовано

 [7] MINC: Режим інкременту пам'яті
 *	Визначає режим інкременту для кожної DMA-передачі до визначеної пам'яті.
 *	У режимі пам'ять-до-пам'яті цей біт ідентифікує джерело пам'яті, якщо DIR = 1, та призначення пам'яті, якщо DIR = 0.
 *	У режимі периферія-до-периферії цей біт ідентифікує джерело периферії, якщо DIR = 1, та призначення периферії, якщо DIR = 0.
 *		0: Вимкнено
 *		1: Увімкнено


 [6] PINC: Режим інкременту периферії
 *	Визначає режим інкременту для кожної DMA-передачі до визначеної периферії.
 *	У режимі пам'ять-до-пам'яті цей біт ідентифікує призначення пам'яті, якщо DIR = 1, та джерело пам'яті, якщо DIR = 0.
 *	У режимі периферія-до-периферії цей біт ідентифікує призначення периферії, якщо DIR = 1, та джерело периферії, якщо DIR = 0.
 *		0: Вимкнено
 *		1: Увімкнено

 [5] CIRC: Циклічний режим
 *		0: Вимкнено
 *		1: Увімкнено


 [4] DIR: Напрямок передачі даних
 *	Цей біт повинен встановлюватись тільки в режимах пам'ять-до-периферії та периферія-до-пам'яті.
 *		0: Читання з периферії
 *
 *		Атрибути джерела визначаються PSIZE та PINC, плюс регістр DMA_CPARx.
 *		Це також дійсно в режимі пам'ять-до-пам'яті.
 *		Атрибути призначення визначаються MSIZE та MINC, плюс регістр DMA_CMARx.
 *		Це також дійсно в режимі периферія-до-периферії.

 *		1: Читання з пам'яті
 *
 *	Атрибути призначення визначаються PSIZE та PINC, плюс регістр DMA_CPARx.
 *	Це також дійсно в режимі пам'ять-до-пам'яті.
 *	Атрибути джерела визначаються MSIZE та MINC, плюс регістр DMA_CMARx.
 *	Це також дійсно в режимі периферія-до-периферії.
 *	Примітка:

 [3] TEIE: Увімкнення переривання при помилці передачі
 *		0: Вимкнено
 *		1: Увімкнено

 [2] HTIE: Увімкнення переривання при половинній передачі
 *		0: Вимкнено
 *		1: Увімкнено

 [1] TCIE: Увімкнення переривання при завершенні передачі
 *		0: Вимкнено
 *		1: Увімкнено

 [0] EN: Увімкнення каналу

 	Коли відбувається помилка передачі каналу, цей біт скидається апаратно.
	Він не може бути знову встановлений програмно (канал x повторно активується) до тих пір,
	поки біт TEIFx регістру DMA_ISR не буде скинутий (шляхом встановлення біта CTEIFx регістру *	*	DMA_IFCR).
 		0: Вимкнено
		1: Увімкнено
 	Примітка: Цей біт встановлюється і скидається програ


 DMA channel x number of data to transfer register (DMA_CNDTRx)

  Address offset: 0x0C + 0x14 * (x - 1), (x = 1 to 8)
  Reset value: 0x0000 0000

 [31:16]     Зарезервовано, повинні зберігатися у значенні скидання.
 [15:0]  NDT: Кількість даних для передачі (від 0 до 2V16 - 1)

 *	Цей бітфілд оновлюється апаратно, коли канал увімкнено:
 *	Він зменшується після кожної окремої передачі DMA «читання з пам'яті, за якою йде запис»,
 *	що вказує на залишок даних для передачі.
 *
 *	Він зберігається на нулі, коли досягається запланована кількість даних для передачі,
 *	якщо канал не в циклічному режимі (CIRC = 0 *у регістрі DMA_CCRx).
 *
 *	Він автоматично перезавантажується попередньо запланованим значенням, коли передача завершена,
 *	якщо канал у циклічному режимі *(CIRC = 1).
 *
 *	Якщо цей бітфілд дорівнює нулю, жодна передача не може бути оброблена, незалежно від статусу каналу (увімкнений чи ні).
 *	Примітка: Цей бітфілд встановлюється і скидається програмно. Він не повинен записуватись, коли канал увімкнено (EN = 1). 	  *
 *	Доступний тільки для читання, коли канал увімкнено (EN = 1).


 DMA Channel x Peripheral Address Register (DMA_CPARx)
 *		Адреса зсуву: 0x10 + 0x14 * (x - 1) (x = 1 до 8)
 *		Початкове значення: 0x0000 0000
 [31:0] PA: Адреса периферії.
 *	Містить базову адресу регістра даних периферії, з якого/до якого читаються/записуються дані.
 *	Вирівнювання:
 *		16 біт (PSIZE[1:0] = 01): Біт 0 PA[31:0] ігнорується.
 *		32 біт (PSIZE[1:0] = 10): Біти 1 і 0 PA[31:0] ігноруються.
 *	Режими:
 *	Пам'ять-до-Пам'яті:
 *		DIR = 0: Адреса джерела пам'яті.
 *		DIR = 1: Адреса призначення пам'яті.
 *	Периферія-до-Периферії:
 *		DIR = 0: Адреса джерела периферії.
 *		DIR = 1: Адреса призначення периферії.
 *	Примітка: Не записувати, коли канал увімкнено (EN = 1).


 DMA Channel x Memory Address Register (DMA_CMARx)
 *		Адреса зсуву: 0x14 + 0x14 * (x - 1) (x = 1 до 8)
 *		Початкове значення: 0x0000 0000
 [31:0]: Адреса пам'яті.
 *	Містить базову адресу пам'яті, з якої/до якої читаються/записуються дані.
 *	Вирівнювання:
 *		16 біт (MSIZE[1:0] = 01): Біт 0 MA[31:0] ігнорується.
 *		32 біт (MSIZE[1:0] = 10): Біти 1 і 0 MA[31:0] ігноруються.
 *	Режими:
 *	Пам'ять-до-Пам'яті:
 *		DIR = 0: Адреса призначення пам'яті.
 *		DIR = 1: Адреса джерела пам'яті.
 *	Периферія-до-Периферії:
 *		DIR = 0: Адреса призначення периферії.
 *		DIR = 1: Адреса джерела периферії.
 *	Примітка: Не записувати, коли канал увімкнено (EN = 1).

 *	Таблиця напрямків передачі даних
 *
 *	Режим					DIR	Джерело (Регістр)		Призначення (Регістр)	Опис напрямку передачі
 *	Пам'ять-до-Периферії	0	DMA_CMARx (пам'ять)		DMA_CPARx (периферія)	Передача з пам'яті в периферію
 *	Периферія-до-Пам'яті	1	DMA_CPARx (периферія)	DMA_CMARx (пам'ять)		Передача з периферії в пам'ять
 *
 *	DIR:
 *		0: Вказує на передачу даних "з" джерела (читання).
 *		1: Вказує на передачу даних "в" призначення (запис).


 * */

// Налаштування DMA для передачі та прийому 16-бітних даних
void DMA_Init(void) {

	RCC->AHB1ENR |= RCC_AHB1ENR_DMA1EN;

	// Налаштування DMA для передачі
	// Прямий напрямок, інкремент пам'яті, 16-бітні дані
	DMA1_Channel1->CCR = DMA_CCR_DIR | DMA_CCR_MINC | DMA_CCR_PSIZE_1
			| DMA_CCR_MSIZE_1;
	DMA1_Channel1->CNDTR = 4; // Кількість 16-бітних елементів
	DMA1_Channel1->CPAR = (uint32_t) &SPI2->DR; // Адреса периферії (SPI2 Data Register)

	// Налаштування DMA для прийому
	DMA1_Channel2->CCR = DMA_CCR_MINC | DMA_CCR_PSIZE_1 | DMA_CCR_MSIZE_1; // Периферія в пам'ять, інкремент пам'яті, 16-бітні дані
	DMA1_Channel2->CNDTR = 4; // Кількість 16-бітних елементів
	DMA1_Channel2->CPAR = (uint32_t) &SPI2->DR; // Адреса периферії
}

// Обробник переривання для DMA
void DMA1_Channel1_IRQHandler(void) {
	if (DMA1->ISR & DMA_ISR_TEIF1) { // Перевірка на помилку передачі
		// Обробка помилки DMA
		DMA1->IFCR |= DMA_IFCR_CTEIF1; // Скидання флагу помилки
	}
}

void DMA1_Channel2_IRQHandler(void) {
	if (DMA1->ISR & DMA_ISR_TEIF2) { // Перевірка на помилку прийому
		// Обробка помилки DMA
		DMA1->IFCR |= DMA_IFCR_CTEIF2; // Скидання флагу помилки
	}
}

// Одночасна передача та прийом даних через DMA
void SPI2_TransmitReceive_DMA(uint16_t *txData, uint16_t *rxData, uint16_t size) {

	DMA1_Channel1->CMAR = (uint32_t) txData; // Адреса пам'яті для передачі
	DMA1_Channel1->CNDTR = size; // Кількість 16-бітних елементів
	DMA1_Channel1->CCR |= DMA_CCR_EN; // Увімкнення DMA каналу для передачі

	DMA1_Channel2->CMAR = (uint32_t) rxData; // Адреса пам'яті для прийому
	DMA1_Channel2->CNDTR = size; // Кількість 16-бітних елементів
	DMA1_Channel2->CCR |= DMA_CCR_EN; // Увімкнення DMA каналу для прийому

	SPI2->CR2 |= SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN; // Увімкнення DMA для передачі та прийому
}

#endif /* INC_DMA_H_ */
